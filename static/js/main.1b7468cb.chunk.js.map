{"version":3,"sources":["assets/images/user.png","components/Navbar/Navbar.module.css","components/Users/Users.module.css","assets/images/Preloader.svg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.js","components/News/News.js","components/Musics/Musics.js","components/Dialogs/DialogItem/DialogsItem.js","components/Dialogs/Message/Message.js","utils/validators/validators.js","components/Commons/FormsControls/FormsControls.js","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js","components/Commons/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","components/Commons/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Login/Login.js","App.js","index.js","components/Commons/FormsControls/FormsControls.module.css","components/Commons/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","baseURL","withCredentials","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","delete","unfollow","post","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","initialState","posts","message","likeCount","id","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","Math","floor","random","length","filter","p","postId","dialogs","name","messages","dialogsReducer","newMessage","newMessageBody","toString","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","setTotalUsersCount","count","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","login","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebarPage","usersPage","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","News","Musics","DialogItem","props","path","dialog","src","alt","Message","element","required","value","maxLengthCreator","maxLength","FormControl","meta","touched","error","children","hasError","styles","formControl","Textarea","input","restProps","Input","createField","placeholder","validators","component","text","Field","validate","maxLengthCreator50","reduxForm","onSubmit","handleSubmit","textAreaBox","Dialogs","dialogsElements","d","key","messageElements","m","dialogItems","values","sendMessage","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","React","connect","sendMessageCreator","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","page","cn","selectedPage","pageNumber","e","User","user","photos","small","photoUrl","userPhoto","disabled","some","Users","Preloader","style","backgroundColor","preloader","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","bind","totalCount","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","ProfileInfo","descriptionBlock","large","aboutMe","contacts","facebook","vk","twitter","instagram","github","lookingForAJob","FontSize","fullName","Post","maxLengthCreator10","AddPostReduxForm","MyPosts","memo","postsElements","reverse","postsBlock","addPost","MyPostContainer","Profile","ProfileContainer","params","authorizedUserId","getUserProfile","withRouter","Header","header","loginBlock","logout","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","App","initializeApp","render","promise","Promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1b7468cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.e6945bad.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__qunin\",\"item\":\"Navbar_item__2f-_W\",\"activeLink\":\"Navbar_activeLink__28BJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__fNAYM\"};","module.exports = __webpack_public_path__ + \"static/media/Preloader.fa67e6b5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__uOV2J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1i29d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1HCvD\",\"dialogItems\":\"Dialogs_dialogItems__gm47x\",\"active\":\"Dialogs_active__3aIf1\",\"dialog\":\"Dialogs_dialog__1TYFa\",\"messages\":\"Dialogs_messages__1qR-E\",\"message\":\"Dialogs_message__2mdfC\",\"element\":\"Dialogs_element__fZh2g\",\"textAreaBox\":\"Dialogs_textAreaBox__1JYlU\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"fc29726e-71eb-4554-872c-f0b3999843f6\"\r\n    }\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 5) {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => {\r\n                    return response.data\r\n                })\r\n        )\r\n    },\r\n    follow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Please use new profileAPI\")\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false){\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {profileAPI, userAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {message: 'Alloh buyuk!', likeCount: 20, id: 1},\r\n        {message: 'Hi every body!', likeCount: 10, id: 2},\r\n        {message: 'Good Morning!', likeCount: 14, id: 3},\r\n        {message: 'Let\"s go to the garden!', likeCount: 16, id: 4},\r\n        {message: 'Good night!', likeCount: 100, id: 5}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                message: action.newPostText,\r\n                likeCount: Math.floor(Math.random() * 20),\r\n                id: state.posts.length + 1\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    userAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    })\r\n}\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId).then(response => {\r\n        dispatch(setStatus(response.data));\r\n    })\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status).then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    })\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {name: 'Bobur', id: '1'},\r\n        {name: 'Abdurahim', id: '2'},\r\n        {name: 'Jahongir', id: '3'},\r\n        {name: 'Alovuddin', id: '4'},\r\n        {name: 'Sherzod', id: '5'}\r\n    ],\r\n    messages: [\r\n        {message: 'Hi', id: '1'},\r\n        {message: 'How are you?', id: '2'},\r\n        {message: 'Yo-yo', id: '3'},\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let newMessage = {\r\n                message: action.newMessageBody,\r\n                id: toString(state.messages.length + 1)\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","\r\nlet initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {userAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n                // users: state.users.map(user => {\r\n                //     if (user.id === action.userId) {\r\n                //         return {...user, followed: false}\r\n                //     }\r\n                //     return user;\r\n                // })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await userAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount());\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let response = await apiMethod(userId);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(actionCreator(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), unfollowSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: true,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                // isAuth: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {initialized: false}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/musics' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Musics.module.css';\r\n\r\nconst Musics = () => {\r\n    return (\r\n        <div>\r\n            Musics\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Musics;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src=\"https://www.nj.com/resizer/h8MrN0-Nw5dB5FOmMVGMmfVKFJo=/450x0/smart/cloudfront-us-east-1.images.arcpublishing.com/advancelocal/SJGKVE5UNVESVCW7BBOHKQCZVE.jpg\" alt={\"#\"}/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '.././Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={s.message}>\r\n           <span className={s.element}>\r\n               {props.message}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","export const required = (value) => {\r\n    if (value) return undefined\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n\r\n    const {input, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n\r\n    <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../Commons/FormsControls/FormsControls\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst maxLengthCreator50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required, maxLengthCreator50]} name={'newMessageBody'} component={Textarea}\r\n                       className={s.textAreaBox}\r\n                       placeholder='Enter the message'\r\n                />\r\n            </div>\r\n            <button>Send message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => (<DialogItem name={d.name} id={d.id} key={d.id}/>))\r\n    let messageElements = state.messages.map(m => (<Message message={m.message} id={m.id} key={m.id}/>))\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div>\r\n                <div className={s.messages}>\r\n                    {messageElements}\r\n                </div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    // debugger\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>\r\n            }\r\n            {pages.filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber).map(page => {\r\n                    return (\r\n                        <span className={cn({\r\n                            [styles.selectedPage]: currentPage === page\r\n                        }, styles.pageNumber)}\r\n                              key={page}\r\n                              onClick={(e) => {\r\n                                  onPageChanged(page);\r\n                              }}>{page}</span>\r\n                    )\r\n                }\r\n            )}\r\n            {portionCount > portionNumber && <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</button>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport photoUrl from \"../../assets/images/user.png\";\r\nimport styles from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small ? user.photos.small : photoUrl}\r\n                             className={styles.userPhoto} alt='#'/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                            {user.followed\r\n                                ?\r\n                                <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                    props.follow(user.id);\r\n                                }}>Unfollow</button>\r\n                                :\r\n                                <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                    props.unfollow(user.id);\r\n                                }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                <div>{user.name}</div>\r\n                    {/*<div>{user.status}</div>*/}\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../Commons/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({totalItemsCount, pageSize, currentPage, onPageChanged, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={totalItemsCount} pageSize={pageSize} currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}/>\r\n            <div>\r\n                {props.users.map(u =>\r\n                    <User user={u} key={u.id} followingInProgress={props.followingInProgress}\r\n                          follow={props.follow} unfollow={props.unfollow}/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport preloader from \"../../../assets/images/Preloader.svg\"\r\n\r\nlet Preloader = () => {\r\n\r\n    return (\r\n        <div style={{backgroundColor: 'none'}}>\r\n            <img src={preloader} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n// Пример использование библиотеки Reselector для избежание перерисовки всей страници при изминении State каждый раз!\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow} from \"../../redux/users-reducer\";\r\nimport Preloader from \"../Commons/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        const {isFetching, totalItemsCount, pageSize, currentPage, users, follow, unfollow, followingInProgress} = this.props;\r\n        return <>\r\n            {isFetching ? <Preloader/> : null}\r\n            <Users totalItemsCount={totalItemsCount}\r\n                   pageSize={pageSize}\r\n                   currentPage={currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={users}\r\n                   follow={follow}\r\n                   unfollow={unfollow}\r\n                   followingInProgress={followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers}),\r\n    withAuthRedirect\r\n)(UsersContainer)","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{status || \"------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Commons/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    let profile = props.profile\r\n\r\n    return (\r\n        <div>\r\n            {/*<div>*/}\r\n            {/*    <img*/}\r\n            {/*        src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350' alt={\"#\"}/>*/}\r\n            {/*</div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <div>\r\n                    <img\r\n                        src={!profile.photos.large ? 'https://image.shutterstock.com/image-vector/please-no-photo-camera-vector-260nw-473234290.jpg' : profile.photos.large}\r\n                        alt={\"#\"}/>\r\n                    <div><strong>Status: </strong><ProfileStatusWithHooks status={props.status}\r\n                                                                          updateStatus={props.updateStatus}/></div>\r\n                </div>\r\n                <div><strong>About Me: </strong>{profile.aboutMe}</div>\r\n                <div><h2>Contacts:</h2></div>\r\n                <div><strong>Facebook: </strong>{profile.contacts.facebook}</div>\r\n                <div><strong>VK: </strong>{profile.contacts.vk}</div>\r\n                <div><strong>Twitter: </strong>{profile.contacts.twitter}</div>\r\n                <div><strong>Instagram: </strong>{profile.contacts.instagram}</div>\r\n                <div><strong>GitHub: </strong>{profile.contacts.github}</div>\r\n                <div><h2>Job:</h2></div>\r\n                <div><strong>Looking for a Job: </strong>{profile.lookingForAJob ?\r\n                    <span style={{FontSize: '30px'}}>&#129488;</span> :\r\n                    <span style={{FontSize: '30px'}}>&#128526;</span>}</div>\r\n                <div><strong>Full Name: </strong>{profile.fullName}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item} id={props.id}>\r\n            <img\r\n                src=\"https://www.nj.com/resizer/h8MrN0-Nw5dB5FOmMVGMmfVKFJo=/450x0/smart/cloudfront-us-east-1.images.arcpublishing.com/advancelocal/SJGKVE5UNVESVCW7BBOHKQCZVE.jpg\"\r\n                alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <button>like {props.likeCount}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Commons/FormsControls/FormsControls\";\r\n\r\nconst maxLengthCreator10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required, maxLengthCreator10]} component={Textarea} name={'newPostText'}\r\n                       placeholder={'Enter the new Post'}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: \"addPostForm\"})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(post => (\r\n                <Post\r\n                    message={post.message}\r\n                    likeCount={post.likeCount}\r\n                    id={post.id}\r\n                    key={post.id}\r\n                />\r\n            ))\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>\r\n                My posts\r\n            </h3>\r\n            <AddPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport SuperMyPostContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <SuperMyPostContainer store={props.store}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, {Component} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png'/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ?\r\n                    <div>{props.login} - <button onClick={props.logout}>Log out</button></div> :\r\n                    <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass HeaderContainer extends Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logout}),\r\n    withAuthRedirect)(HeaderContainer);\r\n\r\n// export default connect(mapStateToProps, {getAuthUserData, logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {createField, Input} from \"../Commons/FormsControls/FormsControls\";\r\nimport styles from \"./../Commons/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => { /* Old version is props, new version is {handleSubmit, error}*/\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'Remember me')}\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar'\nimport News from \"./components/News/News\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport Musics from \"./components/Musics/Musics\";\nimport SuperDialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/Commons/Preloader/Preloader\";\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route path='/dialogs' render={() => <SuperDialogsContainer store={this.props.store}/>}/>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer store={this.props.store}/>}/>\n                    <Route path='/users' render={() => <UsersContainer store={this.props.store}/>}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/musics' component={Musics}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n// setInterval(()=> {\n//     store.dispatch({type: \"FAKE\"})\n// }, 3000)\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3ZmD1\",\"error\":\"FormsControls_error__1Y9qW\",\"formSummaryError\":\"FormsControls_formSummaryError__1K60e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__RcZzf\",\"pageNumber\":\"Paginator_pageNumber__CoQwu\",\"selectedPage\":\"Paginator_selectedPage__1Rvcg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__3eLc5\",\"postsBlock\":\"MyPosts_postsBlock__29PEi\",\"posts\":\"MyPosts_posts__1b1BY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2mOcg\",\"loginBlock\":\"Header_loginBlock__3swB7\"};"],"sourceRoot":""}